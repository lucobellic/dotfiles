# █▄░█ █░█ █ █▀▄ █ ▄▀█
# █░▀█ ▀▄▀ █ █▄▀ █ █▀█

# See https://wiki.hyprland.org/Nvidia/

# Hardware acceleration on NVIDIA GPUs
env = LIBVA_DRIVER_NAME,nvidia
env = __GLX_VENDOR_LIBRARY_NAME,nvidia
env = GBM_BACKEND,nvidia-drm
env = __NV_PRIME_RENDER_OFFLOAD,1
# Controls if G-Sync capable monitors should use Variable Refresh Rate (VRR)
env = __GL_GSYNC_ALLOWED,1
# Controls if Adaptive Sync should be used. Recommended to set as "0" to avoid having problems on some games.
env = __GL_VRR_ALLOWED,0
# Hardware acceleration on Nvidia and Wayland with nvidia-vaapi-driver
env = NVD_BACKEND,direct

## Qt Applications ##

# From the Qt documentation - enables automatic scaling, based on the monitor's pixel density
env = QT_AUTO_SCREEN_SCALE_FACTOR,1
# Tell Qt applications to use the Wayland backend, and fall back to X11 if Wayland is unavailable
env = QT_QPA_PLATFORM,wayland;xcb
# Disables window decorations on Qt applications
env = QT_WAYLAND_DISABLE_WINDOWDECORATION,1
# Tells Qt based applications to pick your theme from qt5ct, use with Kvantum.
env = QT_QPA_PLATFORMTHEME,qt5ct

## XDG Specifications ##

env = XDG_CURRENT_DESKTOP,Hyprland
env = XDG_SESSION_TYPE,wayland
env = XDG_SESSION_DESKTOP,Hyprland

## Toolkit Backend Variables ##

# GTK: Use Wayland if available; if not, try X11 and then any other GDK backend.
env = GDK_BACKEND,wayland,x11,*
# Qt: Use Wayland if available, fall back to X11 if not.
env = QT_QPA_PLATFORM,wayland;xcb
# Run SDL2 applications on Wayland. Remove or set to x11 if games that provide older versions of SDL cause compatibility issues
env = SDL_VIDEODRIVER,wayland
# Clutter package already has Wayland enabled, this variable will force Clutter applications to try and use the Wayland backend
env = CLUTTER_BACKEND,wayland

## Electron ##
env = ELECTRON_OZONE_PLATFORM_HINT,auto
env = ELECTRON_ARGS="--enable-features=UseOzonePlatform --enable-features=WaylandLinuxDrmSyncobj --ozone-platform=wayland"

## HiDPI XWayland ##

xwayland {
  force_zero_scaling = true
}

# toolkit-specific scale
env = GDK_SCALE,1
env = XCURSOR_SIZE,12
env = WLR_NO_HARDWARE_CURSORS,1
cursor {
  no_hardware_cursors = true
}
